require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('ูุชุบูุฑุงุช ุงูุจูุฆุฉ ููููุฏุฉ');
  console.log('URL:', supabaseUrl);
  console.log('Service Key exists:', !!supabaseServiceKey);
  process.exit(1);
}

// ุงุณุชุฎุฏุงู service role key ููุญุตูู ุนูู ุตูุงุญูุงุช ูุงููุฉ
const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

async function forceUpdateAdmin() {
  try {
    console.log('ุงุณุชุฎุฏุงู Service Role Key ููุชุญุฏูุซ...');
    
    // ุฌูุจ ุงููุณุชุฎุฏููู
    const { data: profiles, error: selectError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: true });
      
    if (selectError) {
      console.error('ุฎุทุฃ ูู ุฌูุจ ุงููุณุชุฎุฏููู:', selectError);
      return;
    }
    
    console.log('ุงููุณุชุฎุฏููู ุงูููุฌูุฏูู:', profiles.length);
    
    if (profiles && profiles.length > 0) {
      const userId = profiles[0].id;
      console.log(`ุชุญุฏูุซ ุงููุณุชุฎุฏู: ${userId}`);
      
      // ูุญุงููุฉ ุงูุชุญุฏูุซ ุจุงุณุชุฎุฏุงู service role
      const { data: updateData, error: updateError } = await supabase
        .from('profiles')
        .update({ role: 'admin' })
        .eq('id', userId)
        .select();
        
      if (updateError) {
        console.error('ุฎุทุฃ ูู ุงูุชุญุฏูุซ:', updateError);
        
        // ูุญุงููุฉ ุจุฏููุฉ ุจุงุณุชุฎุฏุงู SQL ูุจุงุดุฑ
        console.log('ูุญุงููุฉ ุจุงุณุชุฎุฏุงู SQL ูุจุงุดุฑ...');
        const { data: sqlData, error: sqlError } = await supabase
          .rpc('exec_sql', {
            sql: `UPDATE profiles SET role = 'admin' WHERE id = '${userId}';`
          });
          
        if (sqlError) {
          console.error('ุฎุทุฃ ูู SQL:', sqlError);
          
          // ูุญุงููุฉ ุฃุฎูุฑุฉ ุจุงุณุชุฎุฏุงู raw SQL
          console.log('ูุญุงููุฉ ุฃุฎูุฑุฉ...');
          try {
            const { data: rawData, error: rawError } = await supabase
              .from('profiles')
              .update({ role: 'admin' })
              .eq('id', userId);
              
            if (rawError) {
              console.error('ูุดู ูู ุฌููุน ุงููุญุงููุงุช:', rawError);
              console.log('\n=== ุงูุญู ุงููุฏูู ===');
              console.log('ูุฌุจ ุชุญุฏูุซ ุงููุณุชุฎุฏู ูุฏููุงู ูู Supabase Dashboard:');
              console.log('1. ุงุฐูุจ ุฅูู: https://supabase.com/dashboard');
              console.log('2. ุงุฎุชุฑ ูุดุฑูุนู');
              console.log('3. ุงุฐูุจ ุฅูู Table Editor > profiles');
              console.log(`4. ุงุจุญุซ ุนู ุงููุณุชุฎุฏู ุจู ID: ${userId}`);
              console.log('5. ุบูุฑ ูููุฉ role ูู "user" ุฅูู "admin"');
              console.log('6. ุงุญูุธ ุงูุชุบููุฑุงุช');
            } else {
              console.log('โ ุชู ุงูุชุญุฏูุซ ุจูุฌุงุญ!');
            }
          } catch (finalError) {
            console.error('ุฎุทุฃ ููุงุฆู:', finalError);
          }
        } else {
          console.log('โ ุชู ุงูุชุญุฏูุซ ุจุงุณุชุฎุฏุงู SQL!');
        }
      } else {
        console.log('โ ุชู ุงูุชุญุฏูุซ ุจูุฌุงุญ!', updateData);
      }
      
      // ุงูุชุญูู ูู ุงููุชูุฌุฉ
      console.log('\nุงูุชุญูู ูู ุงููุชูุฌุฉ...');
      const { data: verifyData, error: verifyError } = await supabase
        .from('profiles')
        .select('id, role')
        .eq('id', userId);
        
      if (verifyError) {
        console.error('ุฎุทุฃ ูู ุงูุชุญูู:', verifyError);
      } else {
        console.log('ุญุงูุฉ ุงููุณุชุฎุฏู ุงูุญุงููุฉ:', verifyData);
        if (verifyData[0]?.role === 'admin') {
          console.log('\n๐ ุงููุณุชุฎุฏู ุฃุตุจุญ admin ุจูุฌุงุญ!');
          console.log('ููููู ุงูุขู ุงููุตูู ุฅูู /admin');
        } else {
          console.log('\nโ ุงููุณุชุฎุฏู ูุง ูุฒุงู ููุณ admin');
        }
      }
    }
    
  } catch (error) {
    console.error('ุฎุทุฃ ุนุงู:', error);
  }
}

forceUpdateAdmin();